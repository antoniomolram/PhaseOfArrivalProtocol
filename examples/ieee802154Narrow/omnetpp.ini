[General]
cmdenv-config-name = 
cmdenv-event-banners = false
cmdenv-module-messages = false
cmdenv-express-mode = true
cmdenv-performance-display = false

record-eventlog = false

cmdenv-runs-to-execute = 
ned-path = ../../src;..
#ned-path = ../../src;../../modules;../../examples;
network = ieee802154Narrow

sim-time-limit = 2.5s

repeat = 1
seed-set = ${runnumber}

output-vector-file = ${resultdir}/${configname}-${seedset}.vec
output-scalar-file = ${resultdir}/${configname}-${seedset}.sca

**.scalar-recording = true
**.vector-recording = true

tkenv-default-config = 

##########################################################
#			WorldUtility parameters                      #
##########################################################
ieee802154Narrow.world.useTorus = false
ieee802154Narrow.world.use2D = true

##########################################################
#			         channel parameters                  #
##########################################################
ieee802154Narrow.connectionManager.sendDirect = false
ieee802154Narrow.connectionManager.pMax = 400mW
ieee802154Narrow.connectionManager.sat = -300dBm
ieee802154Narrow.connectionManager.alpha = 2.5
ieee802154Narrow.connectionManager.carrierFrequency = 2.4E+9Hz

################ PhyLayer parameters #####################
ieee802154Narrow.computer[*].nic.phy.usePropagationDelay = false
ieee802154Narrow.anchor[*].nic.phy.usePropagationDelay = false
ieee802154Narrow.node[*].nic.phy.usePropagationDelay = false
 
ieee802154Narrow.computer[*].nic.phy.analogueModels = xmldoc("config.xml")
#ieee802154Narrow.computer.nic.phy.decider = xmldoc("config.xml")
ieee802154Narrow.computer[*].nic.phy.sensitivity = -100dBm
ieee802154Narrow.computer[*].nic.phy.maxTXPower = 100.1mW
ieee802154Narrow.computer[*].nic.phy.initialRadioState = 0
ieee802154Narrow.computer[*].nic.phy.useThermalNoise = true
ieee802154Narrow.anchor[*].nic.phy.analogueModels = xmldoc("config.xml")
#ieee802154Narrow.anchor[*].nic.phy.decider = xmldoc("config.xml")
ieee802154Narrow.anchor[*].nic.phy.sensitivity = -100dBm
ieee802154Narrow.anchor[*].nic.phy.maxTXPower = 100.1mW
ieee802154Narrow.anchor[*].nic.phy.initialRadioState = 0
ieee802154Narrow.anchor[*].nic.phy.useThermalNoise = true
ieee802154Narrow.node[*].nic.phy.analogueModels = xmldoc("config.xml")
#ieee802154Narrow.node[*].nic.phy.decider = xmldoc("config.xml")
ieee802154Narrow.node[*].nic.phy.sensitivity = -100dBm
ieee802154Narrow.node[*].nic.phy.maxTXPower = 1.1mW
ieee802154Narrow.node[*].nic.phy.initialRadioState = 0
ieee802154Narrow.node[*].nic.phy.useThermalNoise = true

################ MAC layer parameters ####################
ieee802154Narrow.computer[*].nic.mac.txPower = 1mW
ieee802154Narrow.computer[*].nic.mac.notAffectedByHostState = true
ieee802154Narrow.computer[*].nic.mac.macMinBE = 3
ieee802154Narrow.computer[*].nic.mac.macMaxBE = 5
ieee802154Narrow.computer[*].nic.mac.macMaxCSMABackoffs = 4
ieee802154Narrow.computer[*].nic.mac.macAckWaitDuration = 0.000864s
ieee802154Narrow.computer[*].nic.mac.aUnitBackoffPeriod = 0.00032 s

ieee802154Narrow.anchor[*].nic.mac.txPower = 100.1mW
ieee802154Narrow.anchor[*].nic.mac.notAffectedByHostState = true
ieee802154Narrow.anchor[*].nic.mac.macMinBE = 3
ieee802154Narrow.anchor[*].nic.mac.macMaxBE = 5
ieee802154Narrow.anchor[*].nic.mac.macMaxCSMABackoffs = 4
ieee802154Narrow.anchor[*].nic.mac.macAckWaitDuration = 0.000864s
ieee802154Narrow.anchor[*].nic.mac.aUnitBackoffPeriod = 0.00032 s
ieee802154Narrow.anchor[*].nic.mac.queueLength = 30

ieee802154Narrow.node[*].nic.mac.txPower = 100mW
ieee802154Narrow.node[*].nic.mac.notAffectedByHostState = true
ieee802154Narrow.node[*].nic.mac.macMinBE = 3
ieee802154Narrow.node[*].nic.mac.macMaxBE = 5
ieee802154Narrow.node[*].nic.mac.macMaxCSMABackoffs = 4
ieee802154Narrow.node[*].nic.mac.macAckWaitDuration = 0.000864s
ieee802154Narrow.node[*].nic.mac.aUnitBackoffPeriod = 0.00032 s

ieee802154Narrow.**.nic.mac.headerLength = 104 bit # 2 + 1 + 2 + 2 + 2 + 2 + ... + 2 

ieee802154Narrow.computer[*].nic.mac.ReceptionOnBackoff = false
ieee802154Narrow.anchor[*].nic.mac.ReceptionOnBackoff = false
ieee802154Narrow.node[*].nic.mac.ReceptionOnBackoff = false

ieee802154Narrow.node[*].nic.mac.TransmitOnReception = false
ieee802154Narrow.anchor[*].nic.mac.TransmitOnReception = false
ieee802154Narrow.computer[*].nic.mac.TransmitOnReception = false
################ NETW layer parameters ####################

ieee802154Narrow.**.net.debug = true
ieee802154Narrow.**.net.stats = false
ieee802154Narrow.**.net.headerLength = 0bit

################ App layer parameters ####################

# All of them except syncPacket have a + 6 bytes due to the extra bytes needed by the long address for Mobile Nodes, it corresponds to MAC layer but here is easier to add the offset    	
ieee802154Narrow.**.appl.syncPacketLength = 88bit			# Sync Packet Length, includes 1 byte status, 4 byte timestamp and 2 + 2 + 2 bytes possition
ieee802154Narrow.**.appl.normalReportPacketLength = 56bit 	# Rutinary Report Packet Length, includes 1 byte status and should be added 2 bytes x each listened Anchor, only exists in MN type 1 and 4
ieee802154Narrow.**.appl.type2ReportPacketLength = 56bit	# MN type 2 Report Packet Length, includes 1 byte status and should be added (2 + 2 + 2 = 6) position bytes x each position calculated, only MN type 2
ieee802154Narrow.**.appl.askReportPacketLength = 80bit		# When a report or extra report has the flag ASK activated, 10 bytes must be added to take into account the info sent about which we ask
ieee802154Narrow.**.appl.requestPacketLength = 8bit			# When a report or extra report has the flag Request activated, 1 byte must be added to take into account the info sent about which we ask
ieee802154Narrow.**.appl.broadcastPacketLength = 64bit		# Broadcast Packet Length, includes 1 byte status and 1 aditional byte information. This is the broadcast packet sent by MN type 3 and 4
ieee802154Narrow.**.appl.answerANtoMNPacketLength = 136bit	# Report sent by AN to MN when MN makes a request, includes 1 byte status and 10 bytes info.
ieee802154Narrow.**.appl.bcastMixANPacketLength = 72bit		# Report sent by AN when it receives broadcasts from a MN, sends a report per broadcast, includes 1 byte status and 2 bytes RSSI info.


ieee802154Narrow.**.appl.syncPacketsPerSyncPhase = 1 		# Number of slot periods (or packets in random mode) to send every sync phase
ieee802154Narrow.anchor[*].appl.phaseRepetitionNumber = -1 	# Number of full phases
ieee802154Narrow.anchor[*].appl.syncInSlot = true
ieee802154Narrow.anchor[*].appl.syncFirstMaxRandomTime = 6ms
ieee802154Narrow.anchor[*].appl.syncRestMaxRandomTimes = 6ms

ieee802154Narrow.world.bitrate = 250000

**.battery.debug = false
**.battery.nominal = 99999mAh
**.battery.capacity = 99999mAh
**.battery.voltage = 3.3V
**.battery.resolution = 0.1s
**.battery.publishDelta = 1
**.battery.publishTime = 0
**.battery.numDevices = 1

**.batteryStats.debug = false
**.batteryStats.detail = false
**.batteryStats.timeSeries = false

##########################################################
#			Simulation parameters                        #
##########################################################

ieee802154Narrow.**.coreDebug = true
ieee802154Narrow.playgroundSizeX = 1m
ieee802154Narrow.playgroundSizeY = 1m
ieee802154Narrow.playgroundSizeZ = 0m
ieee802154Narrow.numComputers = 1
ieee802154Narrow.numAnchors = 10


################ Utility parameters  #######################
ieee802154Narrow.anchor[*].utility.playgroundSizeX = 0m
ieee802154Narrow.anchor[*].utility.playgroundSizeY = 0m
ieee802154Narrow.anchor[*].utility.playgroundSizeZ = 0m

ieee802154Narrow.node[*].utility.playgroundSizeX = 0m
ieee802154Narrow.node[*].utility.playgroundSizeY = 0m
ieee802154Narrow.node[*].utility.playgroundSizeZ = 0m

ieee802154Narrow.computer[*].utility.playgroundSizeX = 0m
ieee802154Narrow.computer[*].utility.playgroundSizeY = 0m
ieee802154Narrow.computer[*].utility.playgroundSizeZ = 0m

################ Mobility parameters #####################

ieee802154Narrow.anchor[*].mobility.minimumDistanceComputer = 0.0
# Next line calculates the minimum distance between Anchors depending on the size of the playground and the number of Anchors, it is multipied by 0.85 to reduce the distance ato a 85% not to have the worst situation
#ieee802154Narrow.anchor[*].mobility.minimumDistanceAnchor = sqrt(${sizeX}*${sizeY}/${numAnchors})*0.80 #120.0 160.0
ieee802154Narrow.anchor[*].mobility.minimumDistanceAnchor = 0.0
ieee802154Narrow.node[*].mobility.minimumDistanceNode = 70.0

ieee802154Narrow.computer[0].mobility.x = 1
ieee802154Narrow.computer[0].mobility.y = 1
ieee802154Narrow.computer[0].mobility.z = 0
ieee802154Narrow.anchor[*].mobility.x = -2
ieee802154Narrow.anchor[*].mobility.y = -2
ieee802154Narrow.anchor[*].mobility.z = 0
#ieee802154Narrow.node[1].mobility.x = 180
#ieee802154Narrow.node[1].mobility.y = 600
ieee802154Narrow.node[*].mobility.x = -1
ieee802154Narrow.node[*].mobility.y = -1
ieee802154Narrow.node[*].mobility.z = 0
#ieee802154Narrow.node[1].mobility.x = 350
#ieee802154Narrow.node[1].mobility.y = 75

##### Mobile Node Configuration ######
ieee802154Narrow.node[*].appl.nodeConfig = 3
ieee802154Narrow.node[*].appl.offsetSyncPhases = 0#1
ieee802154Narrow.node[*].appl.activePhases = 1#2
ieee802154Narrow.node[*].appl.inactivePhases = 0#4
ieee802154Narrow.node[*].appl.reportPhases = 0#12
ieee802154Narrow.node[*].appl.makeExtraReport = true
ieee802154Narrow.node[*].appl.askFrequency = 2
ieee802154Narrow.node[*].appl.NumberOfBroadcasts = 3#3
ieee802154Narrow.node[*].appl.positionsToSave = 5
ieee802154Narrow.node[*].appl.centralized = true

ieee802154Narrow.node[*].appl.offsetPhases = 0
ieee802154Narrow.node[*].appl.offsetReportPhases = 0
#ieee802154Narrow.anchor[*].appl.syncPacketsPerSyncPhase = 1

############################################################################################################################

[Config Red8012154]


##########################################################
#			WorldUtility parameters                      #
##########################################################
**.world.useTorus = false
**.world.use2D = true



##########################################################
#			         channel parameters                  #
##########################################################
**.connectionManager.sendDirect = false
**.connectionManager.pMax = 400mW
**.connectionManager.sat = -300dBm
**.connectionManager.alpha = 2.5
**.connectionManager.carrierFrequency = 2.4E+9Hz

################ PhyLayer parameters #####################
**.computer[*].nic.phy.usePropagationDelay = false
**.anchor[*].nic.phy.usePropagationDelay = false
**.node[*].nic.phy.usePropagationDelay = false


**.computer[*].nic.phy.analogueModels = xmldoc("config.xml")
#**.computer.nic.phy.decider = xmldoc("config.xml")
**.computer[*].nic.phy.sensitivity = -100dBm
**.computer[*].nic.phy.maxTXPower = 100.1mW
**.computer[*].nic.phy.initialRadioState = 0
**.computer[*].nic.phy.useThermalNoise = true
**.anchor[*].nic.phy.analogueModels = xmldoc("config.xml")
#**.anchor[*].nic.phy.decider = xmldoc("config.xml")
**.anchor[*].nic.phy.sensitivity = -100dBm
**.anchor[*].nic.phy.maxTXPower = 100.1mW
**.anchor[*].nic.phy.initialRadioState = 0
**.anchor[*].nic.phy.useThermalNoise = true
**.node[*].nic.phy.analogueModels = xmldoc("config.xml")
#**.node[*].nic.phy.decider = xmldoc("config.xml")
**.node[*].nic.phy.sensitivity = -100dBm
**.node[*].nic.phy.maxTXPower = 1.1mW
**.node[*].nic.phy.initialRadioState = 0
**.node[*].nic.phy.useThermalNoise = true

################ MAC layer parameters ####################
**.computer[*].nic.mac.txPower = 1mW
**.computer[*].nic.mac.notAffectedByHostState = true
**.computer[*].nic.mac.macMinBE = 3
**.computer[*].nic.mac.macMaxBE = 5
**.computer[*].nic.mac.macMaxCSMABackoffs = 3
**.computer[*].nic.mac.macAckWaitDuration = 0.000864s
**.computer[*].nic.mac.aUnitBackoffPeriod = 0.00032 s

**.anchor[*].nic.mac.txPower = 100.1mW
**.anchor[*].nic.mac.notAffectedByHostState = true
**.anchor[*].nic.mac.macMinBE = 3
**.anchor[*].nic.mac.macMaxBE = 5
**.anchor[*].nic.mac.macMaxCSMABackoffs = 4
**.anchor[*].nic.mac.macAckWaitDuration = 0.000864s
**.anchor[*].nic.mac.aUnitBackoffPeriod = 0.00032 s
**.anchor[*].nic.mac.queueLength = 30

**.node[*].nic.mac.txPower = 100mW
**.node[*].nic.mac.notAffectedByHostState = true
**.node[*].nic.mac.macMinBE = 3
**.node[*].nic.mac.macMaxBE = 5
**.node[*].nic.mac.macMaxCSMABackoffs = 4
**.node[*].nic.mac.macAckWaitDuration = 0.000864s
**.node[*].nic.mac.aUnitBackoffPeriod = 0.00032 s

**.**.nic.mac.headerLength = 104 bit # 2 + 1 + 2 + 2 + 2 + 2 + ... + 2 

**.computer[*].nic.mac.receptionOnBackoff = false
**.anchor[*].nic.mac.receptionOnBackoff = false
**.node[*].nic.mac.receptionOnBackoff = false
**.computer[*].nic.mac.receptionOnCCA = false
**.anchor[*].nic.mac.receptionOnCCA = false
**.node[*].nic.mac.receptionOnCCA = false

**.node[*].nic.mac.transmitOnReception = false
**.anchor[*].nic.mac.transmitOnReception = false
**.computer[*].nic.mac.transmitOnReception = false
################ NETW layer parameters ####################

**.**.net.debug = true
**.**.net.stats = false
**.**.net.headerLength = 0bit

################ App layer parameters ####################

# All of them except syncPacket have a + 6 bytes due to the extra bytes needed by the long address for Mobile Nodes, it corresponds to MAC layer but here is easier to add the offset    	
**.**.appl.syncPacketLength = 88bit			# Sync Packet Length, includes 1 byte status, 4 byte timestamp and 2 + 2 + 2 bytes possition
**.**.appl.normalReportPacketLength = 56bit 	# Rutinary Report Packet Length, includes 1 byte status and should be added 2 bytes x each listened Anchor, only exists in MN type 1 and 4
**.**.appl.type2ReportPacketLength = 56bit	# MN type 2 Report Packet Length, includes 1 byte status and should be added (2 + 2 + 2 = 6) position bytes x each position calculated, only MN type 2
**.**.appl.askReportPacketLength = 80bit		# When a report or extra report has the flag ASK activated, 10 bytes must be added to take into account the info sent about which we ask
**.**.appl.requestPacketLength = 8bit			# When a report or extra report has the flag Request activated, 1 byte must be added to take into account the info sent about which we ask
**.**.appl.broadcastPacketLength = 64bit		# Broadcast Packet Length, includes 1 byte status and 1 aditional byte information. This is the broadcast packet sent by MN type 3 and 4
**.**.appl.answerANtoMNPacketLength = 136bit	# Report sent by AN to MN when MN makes a request, includes 1 byte status and 10 bytes info.
**.**.appl.bcastMixANPacketLength = 72bit		# Report sent by AN when it receives broadcasts from a MN, sends a report per broadcast, includes 1 byte status and 2 bytes RSSI info.


**.**.appl.syncPacketsPerSyncPhase = 1 		# Number of slot periods (or packets in random mode) to send every sync phase
**.anchor[*].appl.phaseRepetitionNumber = -1 	# Number of full phases
**.anchor[*].appl.syncInSlot = true
**.anchor[*].appl.syncFirstMaxRandomTime = 6ms
**.anchor[*].appl.syncRestMaxRandomTimes = 6ms



**.world.bitrate = 250000

**.battery.debug = false
**.battery.nominal = 99999mAh
**.battery.capacity = 99999mAh
**.battery.voltage = 3.3V
**.battery.resolution = 0.1s
**.battery.publishDelta = 1
**.battery.publishTime = 0
**.battery.numDevices = 1

**.batteryStats.debug = false
**.batteryStats.detail = false
**.batteryStats.timeSeries = false

##########################################################
#			Simulation parameters                        #
##########################################################

**.**.coreDebug = true
**.playgroundSizeX = 1m
**.playgroundSizeY = 1m
**.playgroundSizeZ = 0m
**.constraintAreaMaxX = 1m
**.constraintAreaMaxY = 1m
**.constraintAreaMaxZ = 1m
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m

**.numComputers = 1
**.numAnchors = 10
**.numNodes = ${1..10}
**.timeComSinkPhase = 1.0s
**.fullPhaseTime = 2.5s
################ Utility parameters  #######################
#**.anchor[*].utility.playgroundSizeX = 0m
#**.anchor[*].utility.playgroundSizeY = 0m
#**.anchor[*].utility.playgroundSizeZ = 0m

#**.node[*].utility.playgroundSizeX = 0m
#**.node[*].utility.playgroundSizeY = 0m
#**.node[*].utility.playgroundSizeZ = 0m

#**.computer[*].utility.playgroundSizeX = 0m
#**.computer[*].utility.playgroundSizeY = 0m
#**.computer[*].utility.playgroundSizeZ = 0m

################ Mobility parameters #####################

**.anchor[*].mobility.minimumDistanceComputer = 0
# Next line calculates the minimum distance between Anchors depending on the size of the playground and the number of Anchors, it is multipied by 0.85 to reduce the distance ato a 85% not to have the worst situation
#**.anchor[*].mobility.minimumDistanceAnchor = sqrt(${sizeX}*${sizeY}/${numAnchors})*0.80 #120.0 160.0
**.anchor[*].mobility.minimumDistanceAnchor = 0
**.node[*].mobility.minimumDistanceNode = 10

**.computer[0].mobility.x = 1
**.computer[0].mobility.y = 1
**.computer[0].mobility.z = 0
**.anchor[*].mobility.x = -2
**.anchor[*].mobility.y = -2
**.anchor[*].mobility.z = 0
#**.node[1].mobility.x = 180
#**.node[1].mobility.y = 600
**.node[*].mobility.x = -1
**.node[*].mobility.y = -1
**.node[*].mobility.z = 0
#**.node[1].mobility.x = 350
#**.node[1].mobility.y = 75

##### Mobile Node Configuration ######
**.node[*].appl.nodeConfig = 3
**.node[*].appl.offsetSyncPhases = 0#1
**.node[*].appl.activePhases = 1#2
**.node[*].appl.inactivePhases = 0#4
**.node[*].appl.reportPhases = 0#12
**.node[*].appl.makeExtraReport = true
**.node[*].appl.askFrequency = 2
**.node[*].appl.NumberOfBroadcasts = 3#3
**.node[*].appl.positionsToSave = 5
**.node[*].appl.centralized = true

**.node[*].appl.offsetPhases = 0
**.node[*].appl.offsetReportPhases = 0
#**.anchor[*].appl.syncPacketsPerSyncPhase = 1
**.anchor[*].nic.mac.macDuplicateFilter = true
**.anchor[*].appl.appDuplicateFilter = true
**.computer[*].appl.appDuplicateFilter = true
